//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The CloudFoundrySection Configuration Section.
    /// </summary>
    public partial class CloudFoundrySection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the CloudFoundrySection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CloudFoundrySectionSectionName = "cloudfoundry";
        
        /// <summary>
        /// The XML path of the CloudFoundrySection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string CloudFoundrySectionSectionPath = "cloudfoundry";
        
        /// <summary>
        /// Gets the CloudFoundrySection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public static global::CloudFoundry.Configuration.CloudFoundrySection Instance
        {
            get
            {
                return ((global::CloudFoundry.Configuration.CloudFoundrySection)(global::System.Configuration.ConfigurationManager.GetSection(global::CloudFoundry.Configuration.CloudFoundrySection.CloudFoundrySectionSectionPath)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.CloudFoundrySection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.CloudFoundrySection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DEA Property
        /// <summary>
        /// The XML name of the <see cref="DEA"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DEAPropertyName = "dea";
        
        /// <summary>
        /// Gets or sets the DEA.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DEA.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.CloudFoundrySection.DEAPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CloudFoundry.Configuration.DEAElement DEA
        {
            get
            {
                return ((global::CloudFoundry.Configuration.DEAElement)(base[global::CloudFoundry.Configuration.CloudFoundrySection.DEAPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.CloudFoundrySection.DEAPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The DEAElement Configuration Element.
    /// </summary>
    public partial class DEAElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region BaseDir Property
        /// <summary>
        /// The XML name of the <see cref="BaseDir"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BaseDirPropertyName = "baseDir";
        
        /// <summary>
        /// Gets or sets the BaseDir.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The BaseDir.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.BaseDirPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BaseDir
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DEAElement.BaseDirPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.BaseDirPropertyName] = value;
            }
        }
        #endregion
        
        #region LocalRoute Property
        /// <summary>
        /// The XML name of the <see cref="LocalRoute"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LocalRoutePropertyName = "localRoute";
        
        /// <summary>
        /// Gets or sets the LocalRoute.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LocalRoute.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.LocalRoutePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string LocalRoute
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DEAElement.LocalRoutePropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.LocalRoutePropertyName] = value;
            }
        }
        #endregion
        
        #region FilerPort Property
        /// <summary>
        /// The XML name of the <see cref="FilerPort"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FilerPortPropertyName = "filerPort";
        
        /// <summary>
        /// Gets or sets the FilerPort.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The FilerPort.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.FilerPortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=12345)]
        public virtual int FilerPort
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.FilerPortPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.FilerPortPropertyName] = value;
            }
        }
        #endregion
        
        #region StatusPort Property
        /// <summary>
        /// The XML name of the <see cref="StatusPort"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StatusPortPropertyName = "statusPort";
        
        /// <summary>
        /// Gets or sets the StatusPort.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The StatusPort.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.StatusPortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=0)]
        public virtual int StatusPort
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.StatusPortPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.StatusPortPropertyName] = value;
            }
        }
        #endregion
        
        #region HeartbeatIntervalMs Property
        /// <summary>
        /// The XML name of the <see cref="HeartbeatIntervalMs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string HeartbeatIntervalMsPropertyName = "heartbeatIntervalMs";
        
        /// <summary>
        /// Gets or sets the HeartbeatIntervalMs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The HeartbeatIntervalMs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.HeartbeatIntervalMsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=10000)]
        public virtual int HeartbeatIntervalMs
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.HeartbeatIntervalMsPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.HeartbeatIntervalMsPropertyName] = value;
            }
        }
        #endregion
        
        #region MessageBus Property
        /// <summary>
        /// The XML name of the <see cref="MessageBus"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MessageBusPropertyName = "messageBus";
        
        /// <summary>
        /// Gets or sets the MessageBus.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MessageBus.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.MessageBusPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string MessageBus
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DEAElement.MessageBusPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.MessageBusPropertyName] = value;
            }
        }
        #endregion
        
        #region Multitenant Property
        /// <summary>
        /// The XML name of the <see cref="Multitenant"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MultitenantPropertyName = "multiTenant";
        
        /// <summary>
        /// Gets or sets the Multitenant.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Multitenant.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.MultitenantPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Multitenant
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.DEAElement.MultitenantPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.MultitenantPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxMemoryMB Property
        /// <summary>
        /// The XML name of the <see cref="MaxMemoryMB"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxMemoryMBPropertyName = "maxMemoryMB";
        
        /// <summary>
        /// Gets or sets the MaxMemoryMB.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxMemoryMB.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.MaxMemoryMBPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=2048)]
        public virtual int MaxMemoryMB
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.MaxMemoryMBPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.MaxMemoryMBPropertyName] = value;
            }
        }
        #endregion
        
        #region Secure Property
        /// <summary>
        /// The XML name of the <see cref="Secure"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SecurePropertyName = "secure";
        
        /// <summary>
        /// Gets or sets the Secure.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Secure.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.SecurePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool Secure
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.DEAElement.SecurePropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.SecurePropertyName] = value;
            }
        }
        #endregion
        
        #region EnforceUsageLimit Property
        /// <summary>
        /// The XML name of the <see cref="EnforceUsageLimit"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EnforceUsageLimitPropertyName = "enforceUlimit";
        
        /// <summary>
        /// Gets or sets the EnforceUsageLimit.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The EnforceUsageLimit.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.EnforceUsageLimitPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool EnforceUsageLimit
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.DEAElement.EnforceUsageLimitPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.EnforceUsageLimitPropertyName] = value;
            }
        }
        #endregion
        
        #region DisableDirCleanup Property
        /// <summary>
        /// The XML name of the <see cref="DisableDirCleanup"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DisableDirCleanupPropertyName = "disableDirCleanup";
        
        /// <summary>
        /// Gets or sets the DisableDirCleanup.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DisableDirCleanup.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.DisableDirCleanupPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=false)]
        public virtual bool DisableDirCleanup
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.DEAElement.DisableDirCleanupPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.DisableDirCleanupPropertyName] = value;
            }
        }
        #endregion
        
        #region UseDiskQuota Property
        /// <summary>
        /// The XML name of the <see cref="UseDiskQuota"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UseDiskQuotaPropertyName = "useDiskQuota";
        
        /// <summary>
        /// Gets or sets the UseDiskQuota.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The UseDiskQuota.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.UseDiskQuotaPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=true)]
        public virtual bool UseDiskQuota
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.DEAElement.UseDiskQuotaPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.UseDiskQuotaPropertyName] = value;
            }
        }
        #endregion
        
        #region MaxConcurrentStarts Property
        /// <summary>
        /// The XML name of the <see cref="MaxConcurrentStarts"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string MaxConcurrentStartsPropertyName = "maxConcurrentStarts";
        
        /// <summary>
        /// Gets or sets the MaxConcurrentStarts.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The MaxConcurrentStarts.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.MaxConcurrentStartsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=3)]
        public virtual int MaxConcurrentStarts
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.MaxConcurrentStartsPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.MaxConcurrentStartsPropertyName] = value;
            }
        }
        #endregion
        
        #region Index Property
        /// <summary>
        /// The XML name of the <see cref="Index"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string IndexPropertyName = "index";
        
        /// <summary>
        /// Gets or sets the Index.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Index.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.IndexPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=-1)]
        public virtual int Index
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.IndexPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.IndexPropertyName] = value;
            }
        }
        #endregion
        
        #region AdvertiseIntervalMs Property
        /// <summary>
        /// The XML name of the <see cref="AdvertiseIntervalMs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string AdvertiseIntervalMsPropertyName = "advertiseIntervalMs";
        
        /// <summary>
        /// Gets or sets the AdvertiseIntervalMs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The AdvertiseIntervalMs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.AdvertiseIntervalMsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue=5000)]
        public virtual int AdvertiseIntervalMs
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DEAElement.AdvertiseIntervalMsPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.AdvertiseIntervalMsPropertyName] = value;
            }
        }
        #endregion
        
        #region Domain Property
        /// <summary>
        /// The XML name of the <see cref="Domain"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DomainPropertyName = "domain";
        
        /// <summary>
        /// Gets or sets the Domain.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Domain.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.DomainPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Domain
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DEAElement.DomainPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.DomainPropertyName] = value;
            }
        }
        #endregion
        
        #region UploadThrottleBitsps Property
        /// <summary>
        /// The XML name of the <see cref="UploadThrottleBitsps"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string UploadThrottleBitspsPropertyName = "uploadThrottleBitsps";
        
        /// <summary>
        /// Gets or sets the network outbound throttle limit to be enforced for the running apps. Units are in Bits Per Second.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The network outbound throttle limit to be enforced for the running apps. Units ar" +
            "e in Bits Per Second.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.UploadThrottleBitspsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual long UploadThrottleBitsps
        {
            get
            {
                return ((long)(base[global::CloudFoundry.Configuration.DEAElement.UploadThrottleBitspsPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.UploadThrottleBitspsPropertyName] = value;
            }
        }
        #endregion
        
        #region LogyardUidPath Property
        /// <summary>
        /// The XML name of the <see cref="LogyardUidPath"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LogyardUidPathPropertyName = "logyardUidPath";
        
        /// <summary>
        /// Gets or sets the LogyardUidPath.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The LogyardUidPath.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.LogyardUidPathPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false, DefaultValue="")]
        public virtual string LogyardUidPath
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DEAElement.LogyardUidPathPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.LogyardUidPathPropertyName] = value;
            }
        }
        #endregion
        
        #region Stacks Property
        /// <summary>
        /// The XML name of the <see cref="Stacks"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StacksPropertyName = "stacks";
        
        /// <summary>
        /// Gets or sets the Stacks.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Stacks.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.StacksPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=true)]
        public virtual global::CloudFoundry.Configuration.StackCollection Stacks
        {
            get
            {
                return ((global::CloudFoundry.Configuration.StackCollection)(base[global::CloudFoundry.Configuration.DEAElement.StacksPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.StacksPropertyName] = value;
            }
        }
        #endregion
        
        #region DirectoryServer Property
        /// <summary>
        /// The XML name of the <see cref="DirectoryServer"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DirectoryServerPropertyName = "directoryServer";
        
        /// <summary>
        /// Gets or sets the DirectoryServer.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DirectoryServer.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.DirectoryServerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CloudFoundry.Configuration.DirectoryServerElement DirectoryServer
        {
            get
            {
                return ((global::CloudFoundry.Configuration.DirectoryServerElement)(base[global::CloudFoundry.Configuration.DEAElement.DirectoryServerPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.DirectoryServerPropertyName] = value;
            }
        }
        #endregion
        
        #region Staging Property
        /// <summary>
        /// The XML name of the <see cref="Staging"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StagingPropertyName = "staging";
        
        /// <summary>
        /// Gets or sets the Staging.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Staging.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DEAElement.StagingPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CloudFoundry.Configuration.StagingElement Staging
        {
            get
            {
                return ((global::CloudFoundry.Configuration.StagingElement)(base[global::CloudFoundry.Configuration.DEAElement.StagingPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DEAElement.StagingPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// A collection of StackElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CloudFoundry.Configuration.StackElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::CloudFoundry.Configuration.StackCollection.StackElementPropertyName)]
    public partial class StackCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CloudFoundry.Configuration.StackElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StackElementPropertyName = "stack";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::CloudFoundry.Configuration.StackCollection.StackElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CloudFoundry.Configuration.StackCollection.StackElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CloudFoundry.Configuration.StackElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CloudFoundry.Configuration.StackElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CloudFoundry.Configuration.StackElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CloudFoundry.Configuration.StackElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.StackElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CloudFoundry.Configuration.StackElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.StackElement this[int index]
        {
            get
            {
                return ((global::CloudFoundry.Configuration.StackElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.StackElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CloudFoundry.Configuration.StackElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.StackElement this[object name]
        {
            get
            {
                return ((global::CloudFoundry.Configuration.StackElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CloudFoundry.Configuration.StackElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="stack">The <see cref="global::CloudFoundry.Configuration.StackElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::CloudFoundry.Configuration.StackElement stack)
        {
            base.BaseAdd(stack);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CloudFoundry.Configuration.StackElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="stack">The <see cref="global::CloudFoundry.Configuration.StackElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::CloudFoundry.Configuration.StackElement stack)
        {
            base.BaseRemove(this.GetElementKey(stack));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.StackElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CloudFoundry.Configuration.StackElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.StackElement GetItemAt(int index)
        {
            return ((global::CloudFoundry.Configuration.StackElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.StackElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CloudFoundry.Configuration.StackElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.StackElement GetItemByKey(string name)
        {
            return ((global::CloudFoundry.Configuration.StackElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The StackElement Configuration Element.
    /// </summary>
    public partial class StackElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.StackElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.StackElement.NamePropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.StackElement.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// A collection of SupportedVersionElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CloudFoundry.Configuration.SupportedVersionElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMap, AddItemName=global::CloudFoundry.Configuration.SupportedVersionsCollection.SupportedVersionElementPropertyName)]
    public partial class SupportedVersionsCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string SupportedVersionElementPropertyName = "supportedVersion";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMap;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override string ElementName
        {
            get
            {
                return global::CloudFoundry.Configuration.SupportedVersionsCollection.SupportedVersionElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CloudFoundry.Configuration.SupportedVersionsCollection.SupportedVersionElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CloudFoundry.Configuration.SupportedVersionElement)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CloudFoundry.Configuration.SupportedVersionElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.SupportedVersionElement this[int index]
        {
            get
            {
                return ((global::CloudFoundry.Configuration.SupportedVersionElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.SupportedVersionElement this[object name]
        {
            get
            {
                return ((global::CloudFoundry.Configuration.SupportedVersionElement)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="supportedVersion">The <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Add(global::CloudFoundry.Configuration.SupportedVersionElement supportedVersion)
        {
            base.BaseAdd(supportedVersion);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="supportedVersion">The <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public void Remove(global::CloudFoundry.Configuration.SupportedVersionElement supportedVersion)
        {
            base.BaseRemove(this.GetElementKey(supportedVersion));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.SupportedVersionElement GetItemAt(int index)
        {
            return ((global::CloudFoundry.Configuration.SupportedVersionElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CloudFoundry.Configuration.SupportedVersionElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public global::CloudFoundry.Configuration.SupportedVersionElement GetItemByKey(string name)
        {
            return ((global::CloudFoundry.Configuration.SupportedVersionElement)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region DefaultVersion Property
        /// <summary>
        /// The XML name of the <see cref="DefaultVersion"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string DefaultVersionPropertyName = "defaultVersion";
        
        /// <summary>
        /// Gets or sets the DefaultVersion.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The DefaultVersion.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.SupportedVersionsCollection.DefaultVersionPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string DefaultVersion
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.SupportedVersionsCollection.DefaultVersionPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.SupportedVersionsCollection.DefaultVersionPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The SupportedVersionElement Configuration Element.
    /// </summary>
    public partial class SupportedVersionElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.SupportedVersionElement.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.SupportedVersionElement.NamePropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.SupportedVersionElement.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The DirectoryServerElement Configuration Element.
    /// </summary>
    public partial class DirectoryServerElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FileApiPort Property
        /// <summary>
        /// The XML name of the <see cref="FileApiPort"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string FileApiPortPropertyName = "fileApiPort";
        
        /// <summary>
        /// Gets or sets the FileApiPort.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The FileApiPort.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DirectoryServerElement.FileApiPortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int FileApiPort
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DirectoryServerElement.FileApiPortPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DirectoryServerElement.FileApiPortPropertyName] = value;
            }
        }
        #endregion
        
        #region V1Port Property
        /// <summary>
        /// The XML name of the <see cref="V1Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string V1PortPropertyName = "v1Port";
        
        /// <summary>
        /// Gets or sets the V1Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The V1Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DirectoryServerElement.V1PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int V1Port
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DirectoryServerElement.V1PortPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DirectoryServerElement.V1PortPropertyName] = value;
            }
        }
        #endregion
        
        #region V2Port Property
        /// <summary>
        /// The XML name of the <see cref="V2Port"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string V2PortPropertyName = "v2Port";
        
        /// <summary>
        /// Gets or sets the V2Port.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The V2Port.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DirectoryServerElement.V2PortPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int V2Port
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DirectoryServerElement.V2PortPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DirectoryServerElement.V2PortPropertyName] = value;
            }
        }
        #endregion
        
        #region StreamingTimeoutMS Property
        /// <summary>
        /// The XML name of the <see cref="StreamingTimeoutMS"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StreamingTimeoutMSPropertyName = "streamingTimeoutMS";
        
        /// <summary>
        /// Gets or sets the StreamingTimeoutMS.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The StreamingTimeoutMS.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DirectoryServerElement.StreamingTimeoutMSPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int StreamingTimeoutMS
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.DirectoryServerElement.StreamingTimeoutMSPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DirectoryServerElement.StreamingTimeoutMSPropertyName] = value;
            }
        }
        #endregion
        
        #region Logger Property
        /// <summary>
        /// The XML name of the <see cref="Logger"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string LoggerPropertyName = "logger";
        
        /// <summary>
        /// Gets or sets the Logger.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Logger.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.DirectoryServerElement.LoggerPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string Logger
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.DirectoryServerElement.LoggerPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.DirectoryServerElement.LoggerPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CloudFoundry.Configuration
{
    
    
    /// <summary>
    /// The StagingElement Configuration Element.
    /// </summary>
    public partial class StagingElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Enabled Property
        /// <summary>
        /// The XML name of the <see cref="Enabled"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string EnabledPropertyName = "enabled";
        
        /// <summary>
        /// Gets or sets the Enabled.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The Enabled.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.StagingElement.EnabledPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual bool Enabled
        {
            get
            {
                return ((bool)(base[global::CloudFoundry.Configuration.StagingElement.EnabledPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.StagingElement.EnabledPropertyName] = value;
            }
        }
        #endregion
        
        #region BuildpacksDirectory Property
        /// <summary>
        /// The XML name of the <see cref="BuildpacksDirectory"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string BuildpacksDirectoryPropertyName = "buildpacksDirectory";
        
        /// <summary>
        /// Gets or sets the BuildpacksDirectory.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The BuildpacksDirectory.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.StagingElement.BuildpacksDirectoryPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string BuildpacksDirectory
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.StagingElement.BuildpacksDirectoryPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.StagingElement.BuildpacksDirectoryPropertyName] = value;
            }
        }
        #endregion
        
        #region StagingTimeoutMs Property
        /// <summary>
        /// The XML name of the <see cref="StagingTimeoutMs"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string StagingTimeoutMsPropertyName = "stagingTimeoutMs";
        
        /// <summary>
        /// Gets or sets the StagingTimeoutMs.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The StagingTimeoutMs.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.StagingElement.StagingTimeoutMsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual int StagingTimeoutMs
        {
            get
            {
                return ((int)(base[global::CloudFoundry.Configuration.StagingElement.StagingTimeoutMsPropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.StagingElement.StagingTimeoutMsPropertyName] = value;
            }
        }
        #endregion
        
        #region GitExecutable Property
        /// <summary>
        /// The XML name of the <see cref="GitExecutable"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        internal const string GitExecutablePropertyName = "gitExecutable";
        
        /// <summary>
        /// Gets or sets the GitExecutable.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.7")]
        [global::System.ComponentModel.DescriptionAttribute("The GitExecutable.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CloudFoundry.Configuration.StagingElement.GitExecutablePropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual string GitExecutable
        {
            get
            {
                return ((string)(base[global::CloudFoundry.Configuration.StagingElement.GitExecutablePropertyName]));
            }
            set
            {
                base[global::CloudFoundry.Configuration.StagingElement.GitExecutablePropertyName] = value;
            }
        }
        #endregion
    }
}
